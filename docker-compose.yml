version: '3.8'
services:
  es:
    build:
      context: ./
      dockerfile: Dockerfile.elasticsearch
    container_name: es
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    build:
      context: ./
      dockerfile: Dockerfile.kibana
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - es

  logstash:
    build:
      context: ./
      dockerfile: Dockerfile.logstash
    container_name: logstash
    environment:
      - DB_URL_DATA=${LOGSTASH_DB_URL}
      - DB_USER_DATA=${LOGSTASH_DB_USER}
      - DB_PASSWORD_DATA=${LOGSTASH_DB_PASSWORD}
      - ES_HOST=${ES_HOST}
      - INDEX_NAME=${INDEX_NAME}
      - INDEX_CONFIG_PATH=${INDEX_CONFIG_PATH}
    volumes:
      - ./logstash/pipelines/logstash.conf:/usr/share/logstash/pipelines/logstash.conf
      - ./logstash/mysql-connector-j-9.1.0.jar:/usr/share/logstash/mysql-connector-j-9.1.0.jar
      - ./logstash/index-config.json:/usr/share/logstash/index-config.json
      - ./init-index.sh:/usr/share/logstash/init-index.sh
    ports:
      - "9600:9600"
      - "5044:5044"
    entrypoint: ["/bin/bash", "-c", "./init-index.sh"]
    depends_on:
      - es

volumes:
  es-data:
    driver: local